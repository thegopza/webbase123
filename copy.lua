--[[ =======================
       Build A Zoo ‚Äî Auto Gift
     ======================= ]]

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer

-- === Helper: ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏Ç‡πà‡∏à‡∏≤‡∏Å PlayerGui.Data.Egg ===
local function _getEggFolder()
    local pg = LocalPlayer:FindFirstChild("PlayerGui")
    local data = pg and pg:FindFirstChild("Data")
    return data and data:FindFirstChild("Egg") or nil
end

local function listEggsFiltered(typeFilterSet, mutFilterSet, limitCount)
    local eg = _getEggFolder()
    local list = {}
    if not eg then return list end

    for _, ch in ipairs(eg:GetChildren()) do
        -- ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ subfolder)
        if #ch:GetChildren() == 0 then
            local T = ch:GetAttribute("T") or ch:GetAttribute("Type") or ch.Name
            local M = ch:GetAttribute("M") or ch:GetAttribute("Mutate")
            if M == "Dino" then M = "Jurassic" end

            local okType = (not typeFilterSet) or (next(typeFilterSet) == nil) or typeFilterSet[tostring(T)]
            local okMut  = (not mutFilterSet)  or (next(mutFilterSet)  == nil) or mutFilterSet[tostring(M or "")]
            if okType and okMut then
                table.insert(list, { uid = ch.Name, T = tostring(T), M = M and tostring(M) or nil })
                if limitCount and #list >= limitCount then break end
            end
        end
    end
    return list
end

-- === Helper: ‡πÉ‡∏™‡πà‡πÑ‡∏Ç‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏∑‡∏≠ (‡∏™‡∏•‡πä‡∏≠‡∏ï 2) ===
local function holdEgg(uid)
    -- ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤ Deploy.S2 ‡πÄ‡∏õ‡πá‡∏ô "Egg_<UID>" ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° 2
    local pg = LocalPlayer:FindFirstChild("PlayerGui")
    local data = pg and pg:FindFirstChild("Data")
    local deploy = data and data:FindFirstChild("Deploy")
    if deploy then
        deploy:SetAttribute("S2", "Egg_" .. uid)
    end
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Two, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Two, false, game)
end

-- === Core: ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô Remote ===
local GiftRE = ReplicatedStorage:WaitForChild("Remote"):WaitForChild("GiftRE")

local function giftOnce(targetPlayer, eggUID)
    if not targetPlayer or not targetPlayer.Parent then
        return false, "Invalid target"
    end
    if not eggUID then
        return false, "No egg UID"
    end

    -- Equip egg to hand
    holdEgg(eggUID)
    task.wait(0.15)

    -- ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏¢‡∏¥‡∏á Remote ‡∏ï‡∏£‡∏á (‡∏à‡∏≤‡∏Å sniff: Args = [Instance<Player>])
    local ok, err = pcall(function()
        GiftRE:FireServer(targetPlayer)
    end)
    if not ok then
        return false, ("GiftRE failed: %s"):format(tostring(err))
    end

    -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏î‡πÑ‡∏Ç‡πà‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ä‡∏¥‡πâ‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
    task.wait(0.25)
    return true
end

-- ========== WindUI (‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ) ==========
local WindUI = rawget(getfenv(0), "WindUI")
if not WindUI then
    local ok, lib = pcall(function()
        return loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
    end)
    if ok and lib then WindUI = lib end
end

local Window, Tabs
if WindUI and WindUI.CreateWindow then
    Window = Window or WindUI:CreateWindow({
        Title = "Build A Zoo",
        Icon = "gift",
        IconThemed = true,
        Author = "Zebux",
        Folder = "Zebux",
        Size = UDim2.fromOffset(520, 360),
        Transparent = true,
        Theme = "Dark",
    })
    Tabs = Tabs or {}
    Tabs.MainSection = (Window.Section and Window:Section({ Title = "üéÅ Gift Tools", Opened = true })) or nil
end

-- ‡∏ñ‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Tabs ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß (‡∏à‡∏≤‡∏Å‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÉ‡∏´‡∏ç‡πà)
-- ‡∏à‡∏∞‡∏•‡∏≠‡∏á reuse ‡πÅ‡∏ó‡∏ô
local RootSection = (Tabs and Tabs.MainSection) or (Window and Window) -- ‡∏ï‡∏Å‡∏•‡∏á‡πÉ‡∏ä‡πâ window

local GiftTab
if RootSection and RootSection.Tab then
    GiftTab = RootSection:Tab({ Title = "üéÅ | Gift" })
end

-- ===== UI State =====
local selectedTargetName = nil
local selectedTypes = {}     -- set: { ["UltraEgg"]=true, ... }
local selectedMuts  = {}     -- set: { ["Golden"]=true, ... }
local giftAmount    = 1
local autoGiftOn    = false
local autoGiftThread

-- === ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ===
local function buildPlayerList()
    local arr = {}
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then table.insert(arr, plr.Name) end
    end
    table.sort(arr)
    return arr
end

-- === ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ä‡πà‡∏ß‡∏¢ ===
local function makeSetFromArray(arr)
    local s = {}
    for _, v in ipairs(arr or {}) do s[tostring(v)] = true end
    return s
end

-- === UI ===
if GiftTab then
    GiftTab:Section({ Title = "üéÅ Auto Gift", Icon = "gift" })

    local targetDropdown = GiftTab:Dropdown({
        Title = "üéØ Target Player",
        Desc  = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á",
        Values = buildPlayerList(),
        Value  = nil,
        Multi  = false,
        Callback = function(v) selectedTargetName = v end
    })

    GiftTab:Button({
        Title = "üîÑ Refresh Player List",
        Callback = function()
            if targetDropdown and targetDropdown.SetList then
                targetDropdown:SetList(buildPlayerList())
            end
        end
    })

    -- Type & Mutation ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏à‡∏£‡∏¥‡∏á (‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏î‡∏à‡∏≤‡∏Å Data.Egg)
    GiftTab:Dropdown({
        Title = "ü•ö Types (multi)",
        Desc  = "‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ = ‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó",
        Values = {"BasicEgg","RareEgg","SuperRareEgg","EpicEgg","LegendEgg","PrismaticEgg","HyperEgg","VoidEgg","BowserEgg","DemonEgg","BoneDragonEgg","UltraEgg","DinoEgg","FlyEgg","UnicornEgg","AncientEgg"},
        Multi = true,
        AllowNone = true,
        Callback = function(arr) selectedTypes = makeSetFromArray(arr) end
    })

    GiftTab:Dropdown({
        Title = "üß¨ Mutations (multi)",
        Desc  = "‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ = ‡∏ó‡∏∏‡∏Å‡∏ä‡∏ô‡∏¥‡∏î‡∏Å‡∏•‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå",
        Values = {"Golden","Diamond","Electric","Fire","Jurassic"},
        Multi = true,
        AllowNone = true,
        Callback = function(arr) selectedMuts = makeSetFromArray(arr) end
    })

    local amountInput = GiftTab:Input({
        Title = "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞ Gift",
        Desc  = "‡πÄ‡∏ä‡πà‡∏ô 1, 5, 10",
        Value = "1",
        Callback = function(v)
            giftAmount = math.max(1, tonumber(v) or 1)
        end
    })

    GiftTab:Button({
        Title = "üéÅ Gift ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á)",
        Callback = function()
            local target = selectedTargetName and Players:FindFirstChild(selectedTargetName)
            if not target then
                WindUI:Notify({ Title="Gift", Content="‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", Duration=2 }); return
            end
            local eggs = listEggsFiltered(selectedTypes, selectedMuts, 1)
            if #eggs == 0 then
                WindUI:Notify({ Title="Gift", Content="‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏Ç‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç", Duration=2 }); return
            end
            local ok, err = giftOnce(target, eggs[1].uid)
            WindUI:Notify({
                Title="Gift",
                Content = ok and ("‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß: "..eggs[1].T..(eggs[1].M and (" ‚Ä¢ "..eggs[1].M) or "")) or ("‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: "..tostring(err)),
                Duration=3
            })
        end
    })

    GiftTab:Toggle({
        Title = "ü§ñ Auto Gift (‡∏ß‡∏ô‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô)",
        Desc  = "‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á",
        Value = false,
        Callback = function(state)
            autoGiftOn = state
            if state and not autoGiftThread then
                autoGiftThread = task.spawn(function()
                    while autoGiftOn do
                        local target = selectedTargetName and Players:FindFirstChild(selectedTargetName)
                        if not target then
                            task.wait(0.5); continue
                        end
                        local toSend = giftAmount
                        while autoGiftOn and toSend > 0 do
                            local eggs = listEggsFiltered(selectedTypes, selectedMuts, 1)
                            if #eggs == 0 then break end
                            local ok = giftOnce(target, eggs[1].uid)
                            if ok then
                                toSend -= 1
                            else
                                -- ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô ‡∏£‡∏≠‡∏´‡∏ô‡πà‡∏≠‡∏¢
                                task.wait(0.3)
                            end
                        end
                        -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏Ç‡πà‡∏´‡∏°‡∏î/‡∏Ñ‡∏£‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏û‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                        task.wait(0.6)
                    end
                    autoGiftThread = nil
                end)
                WindUI:Notify({ Title="Auto Gift", Content="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", Duration=2 })
            end
        end
    })
end

-- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ WindUI: ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô giftOnce ‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ
getgenv().GiftUtils = {
    List = function(typeSet, mutSet, limit) return listEggsFiltered(typeSet, mutSet, limit) end,
    Gift = function(targetName, uid)
        local target = Players:FindFirstChild(targetName or "")
        if not target then return false, "No target" end
        return giftOnce(target, uid)
    end
}
